T: DATA_TYPE ID EQUALS CONTINUE BREAK RETURN NUM FLOAT CHAR IF ELSE WHILE FOR PLUS TIMES LP RP LESSTHAN GREATERTHAN EQUALTO SEMI LFP RFP COMMA VOID MINUS DIVIDE FUNCNAME
S .func.S. .e.  
func .void_or_datatype.FUNCNAME.LP.arg_list_or_void.RP.LFP.stmnts.RFP.  
void_or_datatype .VOID. .DATA_TYPE.
arg_list_or_void .VOID. .arg_list. .e.
arg_list .arg.x.
x .COMMA.arg_list. .e. 
arg .DATA_TYPE.ID.
stmnts .stmnt.stmnts. .e.
stmnt .declaration.SEMI. .I#3.ID.EQUALS.expr.#6.SEMI. .func_call.SEMI. .iff. .WHILE.LP.compr.RP.LFP.stmnts.RFP. .FOR.LP.ID.EQUALS.expr.SEMI.compr.SEMI.ID.EQUALS.expr.RP.LFP.stmnts.RFP. .CONTINUE.SEMI. .BREAK.SEMI. .RETURN.id_or_data_or_blank.SEMI.
iff .IF.#19.LP.compr.RP.#.20.LFP.stmnts.RFP.ell.
ell .e. .ELSE.#21.y.
y .IF.LP.compr.RP.#20.LFP.stmnts.RFP.ell. .LFP.stmnts.RFP.
id_or_data	.I#3.ID. .num_or_char.
expr .func_call.#18. .eval.#17.
func_call .FUNCNAME.LP.arg_passed_or_blank.#14.RP.
arg_passed_or_blank .e. .a#16.arg_passed.
arg_passed .id_or_data.#15.z.
z .COMMA.arg_passed. .e.
declaration .DATA_TYPE.ID.assign.#13.
assign .e. .EQUALS.expr.
eval .term.sub.#7.expr1.#7.
expr1 .e. .PLUS.term.sub.#7.expr1.#4. 
sub .e. .MINUS.term.sub.#5.
term .factor.term1.#7.
term1 .e. .TIMES.term.#1. .DIVIDE.term.#2. 
factor .id_or_data. .LP.expr.RP.
expr2 .LESSTHAN.expr.#10. .GREATERTHAN.expr2.#11. .EQUALTO.expr.#12.
num_or_char .N#3.NUM. .F#3.FLOAT. .C#3.CHAR.
compr .expr.expr2.#9.
id_or_data_or_blank .e. .id_or_data.