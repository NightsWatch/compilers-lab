DATA_TYPE int
FUNCNAME main
LP (
VOID void
RP )
LFP {
DATA_TYPE int
ID b
EQUALS =
NUM 10
SEMI ;
DATA_TYPE int
ID a
EQUALS =
FUNCNAME myfunction
LP (
NUM 10
RP )
SEMI ;
<<<<<<< HEAD
RFP }
DATA_TYPE int
ID l
EQUALS =
NUM 4
SEMI ;
FOR for
LP (
ID l
EQUALS =
NUM 4
SEMI ;
ID l
LESSTHAN <
NUM 5
SEMI ;
ID l
EQUALS =
ID l
=======
IF if
LP (
ID a
EQUALTO ==
NUM 5
RP )
LFP {
ID a
EQUALS =
ID a
>>>>>>> cea0fd6602a21b1f0fcb82bc6517a33d2b48578a
PLUS +
NUM 2
SEMI ;
RFP }
ELSE else
LFP {
<<<<<<< HEAD
DATA_TYPE int
ID h
SEMI ;
ID h
=======
ID a
>>>>>>> cea0fd6602a21b1f0fcb82bc6517a33d2b48578a
EQUALS =
ID a
MINUS -
NUM 2
SEMI ;
RFP }
RETURN return
NUM 0
SEMI ;
RFP }
DATA_TYPE int
FUNCNAME myfunction
LP (
DATA_TYPE int
ID i
RP )
LFP {
DATA_TYPE int
ID k
EQUALS =
ID i
DIVIDE /
NUM 2
SEMI ;
RETURN return
ID k
SEMI ;
RFP }
