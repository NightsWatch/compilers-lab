Grammar is:
S
S is .e.
S is .stmnt.S.
eval
eval is .term.sub.expr1.
expr
expr is .eval.
expr1
expr1 is .PLUS.term.sub.expr1.
expr1 is .e.
factor
factor is .LP.expr.RP.
factor is .id_or_data.
id_or_data
id_or_data is .ID.
id_or_data is .num_or_char.
num_or_char
num_or_char is .CHAR.
num_or_char is .FLOAT.
num_or_char is .NUM.
stmnt
stmnt is .ID.EQUALS.expr.SEMI.
sub
sub is .MINUS.term.sub.
sub is .e.
term
term is .factor.term1.
term1
term1 is .DIVIDE.term.
term1 is .TIMES.term.
term1 is .e.

Grammar2 is:
S
S is .e.
S is .stmnt.S.
eval
eval is .term.sub.#7.expr1.#7.
expr
expr is .eval.
expr1
expr1 is .PLUS.term.sub.#7.expr1.#4.
expr1 is .e.
factor
factor is .LP.expr.RP.
factor is .id_or_data.
id_or_data
id_or_data is .I#3.ID.
id_or_data is .num_or_char.
num_or_char
num_or_char is .C#3.CHAR.
num_or_char is .F#3.FLOAT.
num_or_char is .N#3.NUM.
stmnt
stmnt is .I#3.ID.EQUALS.expr.#6.SEMI.
sub
sub is .MINUS.term.sub.#5.
sub is .e.
term
term is .factor.term1.#7.
term1
term1 is .DIVIDE.term.#2.
term1 is .TIMES.term.#1.
term1 is .e.

Firstset is:
CHAR
CHAR is CHAR
DIVIDE
DIVIDE is DIVIDE
EQUALS
EQUALS is EQUALS
FLOAT
FLOAT is FLOAT
ID
ID is ID
LP
LP is LP
MINUS
MINUS is MINUS
NUM
NUM is NUM
PLUS
PLUS is PLUS
RP
RP is RP
S
S is ID
S is e
SEMI
SEMI is SEMI
TIMES
TIMES is TIMES
eval
eval is CHAR
eval is FLOAT
eval is ID
eval is LP
eval is NUM
expr
expr is CHAR
expr is FLOAT
expr is ID
expr is LP
expr is NUM
expr1
expr1 is PLUS
expr1 is e
factor
factor is CHAR
factor is FLOAT
factor is ID
factor is LP
factor is NUM
id_or_data
id_or_data is CHAR
id_or_data is FLOAT
id_or_data is ID
id_or_data is NUM
num_or_char
num_or_char is CHAR
num_or_char is FLOAT
num_or_char is NUM
stmnt
stmnt is ID
sub
sub is MINUS
sub is e
term
term is CHAR
term is FLOAT
term is ID
term is LP
term is NUM
term1
term1 is DIVIDE
term1 is TIMES
term1 is e

Followset is:
S is $
eval is RP
eval is SEMI
expr is RP
expr is SEMI
expr1 is RP
expr1 is SEMI
factor is DIVIDE
factor is MINUS
factor is PLUS
factor is RP
factor is SEMI
factor is TIMES
id_or_data is DIVIDE
id_or_data is MINUS
id_or_data is PLUS
id_or_data is RP
id_or_data is SEMI
id_or_data is TIMES
num_or_char is DIVIDE
num_or_char is MINUS
num_or_char is PLUS
num_or_char is RP
num_or_char is SEMI
num_or_char is TIMES
stmnt is $
stmnt is ID
sub is PLUS
sub is RP
sub is SEMI
term is MINUS
term is PLUS
term is RP
term is SEMI
term1 is MINUS
term1 is PLUS
term1 is RP
term1 is SEMI

grammar1 S
grammar2 S
grammar1 eval
grammar2 eval
grammar1 expr
grammar2 expr
grammar1 expr1
grammar2 expr1
grammar1 factor
grammar2 factor
grammar1 id_or_data
grammar2 id_or_data
grammar1 num_or_char
grammar2 num_or_char
grammar1 stmnt
grammar2 stmnt
grammar1 sub
grammar2 sub
grammar1 term
grammar2 term
grammar1 term1
grammar2 term1
Created Table:
S	$	.e.
S	ID	.stmnt.S.
eval	CHAR	.term.sub.#7.expr1.#7.
eval	FLOAT	.term.sub.#7.expr1.#7.
eval	ID	.term.sub.#7.expr1.#7.
eval	LP	.term.sub.#7.expr1.#7.
eval	NUM	.term.sub.#7.expr1.#7.
expr	CHAR	.eval.
expr	FLOAT	.eval.
expr	ID	.eval.
expr	LP	.eval.
expr	NUM	.eval.
expr1	PLUS	.PLUS.term.sub.#7.expr1.#4.
expr1	RP	.e.
expr1	SEMI	.e.
factor	CHAR	.id_or_data.
factor	FLOAT	.id_or_data.
factor	ID	.id_or_data.
factor	LP	.LP.expr.RP.
factor	NUM	.id_or_data.
id_or_data	CHAR	.num_or_char.
id_or_data	FLOAT	.num_or_char.
id_or_data	ID	.I#3.ID.
id_or_data	NUM	.num_or_char.
num_or_char	CHAR	.C#3.CHAR.
num_or_char	FLOAT	.F#3.FLOAT.
num_or_char	NUM	.N#3.NUM.
stmnt	ID	.I#3.ID.EQUALS.expr.#6.SEMI.
sub	MINUS	.MINUS.term.sub.#5.
sub	PLUS	.e.
sub	RP	.e.
sub	SEMI	.e.
term	CHAR	.factor.term1.#7.
term	FLOAT	.factor.term1.#7.
term	ID	.factor.term1.#7.
term	LP	.factor.term1.#7.
term	NUM	.factor.term1.#7.
term1	DIVIDE	.DIVIDE.term.#2.
term1	MINUS	.e.
term1	PLUS	.e.
term1	RP	.e.
term1	SEMI	.e.
term1	TIMES	.TIMES.term.#1.

Stack contents:
S $ 
stmnt S $ 
I#3 ID EQUALS expr #6 SEMI S $ 
3 a
Stack: a 
ID EQUALS expr #6 SEMI S $ 
EQUALS expr #6 SEMI S $ 
expr #6 SEMI S $ 
eval #6 SEMI S $ 
term sub #7 expr1 #7 #6 SEMI S $ 
factor term1 #7 sub #7 expr1 #7 #6 SEMI S $ 
id_or_data term1 #7 sub #7 expr1 #7 #6 SEMI S $ 
I#3 ID term1 #7 sub #7 expr1 #7 #6 SEMI S $ 
3 b
Stack: b a 
ID term1 #7 sub #7 expr1 #7 #6 SEMI S $ 
term1 #7 sub #7 expr1 #7 #6 SEMI S $ 
3 epsilon
Stack: epsilon b a 
#7 sub #7 expr1 #7 #6 SEMI S $ 
7 +
Stack: b a 
sub #7 expr1 #7 #6 SEMI S $ 
3 epsilon
Stack: epsilon b a 
#7 expr1 #7 #6 SEMI S $ 
7 +
Stack: b a 
expr1 #7 #6 SEMI S $ 
PLUS term sub #7 expr1 #4 #7 #6 SEMI S $ 
term sub #7 expr1 #4 #7 #6 SEMI S $ 
factor term1 #7 sub #7 expr1 #4 #7 #6 SEMI S $ 
id_or_data term1 #7 sub #7 expr1 #4 #7 #6 SEMI S $ 
I#3 ID term1 #7 sub #7 expr1 #4 #7 #6 SEMI S $ 
3 c
Stack: c b a 
ID term1 #7 sub #7 expr1 #4 #7 #6 SEMI S $ 
term1 #7 sub #7 expr1 #4 #7 #6 SEMI S $ 
3 epsilon
Stack: epsilon c b a 
#7 sub #7 expr1 #4 #7 #6 SEMI S $ 
7 ;
Stack: c b a 
sub #7 expr1 #4 #7 #6 SEMI S $ 
3 epsilon
Stack: epsilon c b a 
#7 expr1 #4 #7 #6 SEMI S $ 
7 ;
Stack: c b a 
expr1 #4 #7 #6 SEMI S $ 
3 epsilon
Stack: epsilon c b a 
#4 #7 #6 SEMI S $ 
4 ;
Stack: + c b a 
#7 #6 SEMI S $ 
7 ;
Stack: T0 a 
#6 SEMI S $ 
6 ;
Stack: 
SEMI S $ 
S $ 
3 epsilon
Stack: epsilon 
$ 
minorinput.txt has been parsed successfully.
