T: DATA_TYPE ID EQUALS CONTINUE BREAK RETURN NUM FLOAT CHAR IF ELSE WHILE FOR PLUS TIMES LP RP LESSTHAN GREATERTHAN EQUALTO SEMI LFP RFP COMMA VOID MINUS DIVIDE FUNCNAME
S .func.S. .e.  
func .void_or_datatype.FUNCNAME.LP.arg_list_or_void.RP.LFP.stmnts.RFP.  
void_or_datatype .VOID. .DATA_TYPE.
arg_list_or_void .VOID. .arg_list. .e.
arg_list .arg.x.
x .COMMA.arg_list. .e. 
arg .DATA_TYPE.ID.
stmnts .stmnt.stmnts. .e.
stmnt .declaration.SEMI. .ID.EQUALS.expr.SEMI. .func_call.SEMI. .iff. .WHILE.LP.compr.RP.LFP.stmnts.RFP. .FOR.LP.ID.EQUALS.expr.SEMI.compr.SEMI.ID.EQUALS.expr.RP.LFP.stmnts.RFP. .CONTINUE.SEMI. .BREAK.SEMI. .RETURN.id_or_data_or_blank.SEMI.
iff .IF.LP.compr.RP.LFP.stmnts.RFP.ell.
ell .e. .ELSE.y.
y .IF.LP.compr.RP.LFP.stmnts.RFP.ell. .LFP.stmnts.RFP.
id_or_data	.ID. .num_or_char.
expr .func_call. .eval.
func_call .FUNCNAME.LP.arg_passed_or_blank.RP.
arg_passed_or_blank .e. .arg_passed.
arg_passed .id_or_data.z.
z .COMMA.arg_passed. .e.
declaration .DATA_TYPE.ID.assign.
assign .e. .EQUALS.expr.
eval .term.sub.expr1.
expr1 .e. .PLUS.term.sub.expr1. 
sub .e. .MINUS.term.sub.
term .factor.term1.
term1 .e. .TIMES.term. .DIVIDE.term. 
factor .id_or_data. .LP.expr.RP.
expr2 .LESSTHAN.eval. .GREATERTHAN.eval. .EQUALTO.eval.
num_or_char .NUM. .FLOAT. .CHAR.
compr .eval.expr2.
id_or_data_or_blank .e. .id_or_data.