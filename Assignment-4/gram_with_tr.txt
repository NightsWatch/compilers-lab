T: DATA_TYPE ID EQUALS CONTINUE BREAK RETURN NUM FLOAT CHAR IF ELSE WHILE FOR PLUS TIMES LP RP LESSTHAN GREATERTHAN EQUALTO SEMI LFP RFP COMMA VOID MINUS DIVIDE FUNCNAME
S .func.S. .e.  
func .void_or_datatype.FUNCNAME.LP.arg_list_or_void.RP.LFP.stmnts.RFP.  
void_or_datatype .VOID. .DATA_TYPE.
arg_list_or_void .VOID. .arg_list. .e.
arg_list .arg.x.
x .COMMA.arg_list. .e. 
arg .DATA_TYPE.ID.
stmnts .stmnt.stmnts. .e.
stmnt .declaration.SEMI. .ID.EQUALS.expr.SEMI. .func_call.SEMI. .iff. .WHILE.LP.expr.RP.LFP.stmnts.RFP. .FOR.LP.ID.EQUALS.expr.SEMI.expr.SEMI.ID.EQUALS.expr.RP.LFP.stmnts.RFP. .CONTINUE.SEMI. .BREAK.SEMI. .RETURN.id_or_data.SEMI.
iff .IF.LP.expr.RP.LFP.stmnts.RFP.ell.
ell .e. .ELSE.y.
y .IF.LP.expr.RP.LFP.stmnts.RFP.ell. .LFP.stmnts.RFP.
id_or_data	.ID. .num_or_char.
expr .func_call. .eval.
func_call .FUNCNAME.LP.arg_passed.RP.
arg_passed .ID.z.
z .COMMA.arg_passed. .e.
declaration .DATA_TYPE.ID.assign.
assign .e. .EQUALS.expr.
num_or_char .NUM. .FLOAT. .CHAR.
eval .termp.expr2.
termp .term.expr1.
expr1 .e. .PLUS.term.expr1. .MINUS.term.expr1.
term .factor.term1.
term1 .e. .TIMES.factor.#2.term1.#1 .DIVIDE.factor.term1.   
factor .id_or_data. .LP.expr.RP.
expr2 .e. .LESSTHAN.termp.expr2. .GREATERTHAN.termp.expr2. .EQUALTO.termp.expr2.

